// <auto-generated />
using System;
using Loterria_Bank.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Loterria_Bank.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20250926003907_loteria")]
    partial class loteria
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("Data.Models.DetalleJugadas", b =>
                {
                    b.Property<int>("DetalleJugadaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("JugadaId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Monto")
                        .HasColumnType("TEXT");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("DetalleJugadaId");

                    b.HasIndex("JugadaId");

                    b.ToTable("DetalleJugadas");
                });

            modelBuilder.Entity("Data.Models.Jugadas", b =>
                {
                    b.Property<int>("JugadaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("TEXT");

                    b.Property<int>("LoteriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NumeroTicket")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Pick4")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pick5")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PrimerLugar")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SegundoLugar")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TercerLugar")
                        .HasColumnType("INTEGER");

                    b.HasKey("JugadaId");

                    b.HasIndex("LoteriaId");

                    b.ToTable("Jugadas");
                });

            modelBuilder.Entity("Data.Models.Loterias", b =>
                {
                    b.Property<int>("LoteriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activa")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoteriaId");

                    b.ToTable("Loterias");
                });

            modelBuilder.Entity("Data.Models.Usuarios", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Activo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Data.Models.DetalleJugadas", b =>
                {
                    b.HasOne("Data.Models.Jugadas", "Jugada")
                        .WithMany("Detalles")
                        .HasForeignKey("JugadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jugada");
                });

            modelBuilder.Entity("Data.Models.Jugadas", b =>
                {
                    b.HasOne("Data.Models.Loterias", "Loteria")
                        .WithMany("Jugadas")
                        .HasForeignKey("LoteriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loteria");
                });

            modelBuilder.Entity("Data.Models.Jugadas", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("Data.Models.Loterias", b =>
                {
                    b.Navigation("Jugadas");
                });
#pragma warning restore 612, 618
        }
    }
}
